version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.1.1
  aws-s3: circleci/aws-s3@4.1.1

references:

build_base_image: &build_base_image
  circleci/node:21.18.0

deploy_base_image: &deploy_base_image
  cimg/python:3.12

working_directory: &working_directory
  ~/ameyrupji

build_default_config: &build_default_config
  docker:
    - image: *build_base_image
  working_directory: *working_directory

deploy_default_config: &deploy_default_config
  docker:
    - image: *deploy_base_image
  working_directory: *working_directory

repo_cache_key: &repo_cache_key
  ameyrupji-com-{{ .Branch }}-{{ .Revision }}

restore_repo: &restore_repo
  restore_cache:
    key: *repo_cache_key

save_repo: &save_repo
  save_cache:
    key: *repo_cache_key
    paths:
      - *working_directory

jobs:
  build:
    <<: *build_default_config
    steps:
      - checkout
      - run: 
          name: build
          command: | 
            cd src/
            rm data/app.json
            mv data/prod/app.json data/app.json
            rm -rf dist/
            npm install
            npm run build
      - *save_repo
  build-develop:
    <<: *build_default_config
    steps:
      - checkout
      - run: 
          name: build
          command: | 
            cd src/
            rm data/app.json
            mv data/beta/app.json data/app.json
            rm -rf dist/
            npm install
            npm run build
            cd dist/
            # find ./ -type f -name '*.css' -exec sed -i 's|url(../|url(|g' {} \;
      - *save_repo
  build-branch:
    <<: *build_default_config
    steps:
      - checkout
      - run: 
          name: build
          command: | 
            cd src/
            rm data/app.json
            mv data/beta/app.json data/app.json
            rm -rf dist/
            npm install
            npm run build
            cd dist/
            # find ./ -type f -name '*.css' -exec sed -i 's|url(../|url(|g' {} \;
      - *save_repo
  upload-master:
    <<: *deploy_default_config
    steps:
      - *restore_repo
      - aws-cli/setup:
          aws_access_key_id: AWS_ACCESS_KEY_ID
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY
      - aws-s3/copy:
          from: /home/circleci/ameyrupji/src/dist/ 
          to: 's3://ameyrupji.com/'
          arguments: --recursive
  upload-develop:
    <<: *deploy_default_config
    steps:
      - *restore_repo
      - aws-cli/setup:
          aws_access_key_id: AWS_ACCESS_KEY_ID
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY
      - aws-s3/copy:
          from: /home/circleci/ameyrupji/src/dist/ 
          to: 's3://beta.ameyrupji.com/'
          arguments: --recursive
  upload-branches:
    <<: *deploy_default_config
    steps:
      - *restore_repo
      - aws-cli/setup:
          aws_access_key_id: AWS_ACCESS_KEY_ID
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY
      - aws-s3/copy:
          from: /home/circleci/ameyrupji/src/dist/ 
          to: s3://beta.ameyrupji.com/${CIRCLE_BRANCH}
          arguments: --recursive
  upload-releases:
    <<: *deploy_default_config
    steps:
      - *restore_repo
      - aws-cli/setup:
          aws_access_key_id: AWS_ACCESS_KEY_ID
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY
      - aws-s3/copy:
          from: /home/circleci/ameyrupji/src/dist/ 
          to: s3://ameyrupji.com/${CIRCLE_BRANCH}
          arguments: --recursive

workflows:
  version: 2
  build-upload:
    jobs:
      - build:
          filters:
            branches:
              only: 
                - master
                - /release.*/
      - build-develop:
          filters:
            branches:
              only: 
                - develop
      - build-branch:
          filters:
            branches:
              ignore: 
                - master
                - develop
                - /release.*/
      - approve:
          type: approval
          requires:
            - build
          filters:
            branches:
              only: 
                - master
                - /release.*/
      - upload-master:
          requires:
              - approve
          filters:
              branches:
                only: master
      - upload-develop:
          requires:
              - build-develop 
          filters:
              branches:
                only: develop
      - upload-releases:
          requires:
              - approve
          filters:
            branches:
              only: /release.*/
      - upload-branches:
          requires:
              - build-branch
          filters:
              branches:
                ignore: 
                  - master
                  - develop
                  - /release.*/

